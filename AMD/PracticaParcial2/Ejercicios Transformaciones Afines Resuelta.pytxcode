=>PYTHONTEX#sage#default#default#0#block#####80#
R = matrix(RR, [[1, 0, 0], [2, 1, 0], [-1, 0, 1]])
alpha = pi/6
MRRg = matrix(RR, [[1, 0, 0], [0, cos(alpha), -sin(alpha)], [0, sin(alpha), cos(alpha)]])

Mg = R * MRRg * R^-1
=>PYTHONTEX#sage#default#default#1#i#####105#
Mg
=>PYTHONTEX#sage#default#default#2#block#####110#
R1 = matrix(RR, [[1, 0, 0], [4, 1, 0], [4, 0, 1]])

b = pi/3
MRRg = matrix(RR, [[1, 0, 0], [0, cos(b), -sin(b)], [0, sin(b), cos(b)]])

Mg1 = R1 * MRRg * R1^-1

C = [Mg1^i * vector(RR, [1, 5, 4]) for i in range(6)]
gC = [Mg * v for v in C]
gCo = (Mg * vector(RR, [1, 4, 4]))[1:]

C = [v[1:] for v in C]
gC = [v[1:] for v in gC]
=>PYTHONTEX#sage#default#default#3#sub#####127#
\begin{center}
\begin{tikzpicture}[scale = 1,
cara1/.style={thick, color = blue, fill opacity = 0.3, fill = blue!20},
cara2/.style={thick, color = red, fill opacity = 0.3, fill = red!20},
]
\draw[->,thick,gray] (-1,0) -- (5.5,0); % Eje X
\draw[->,thick,gray] (0,-2.5) -- (0,5.5); % Eje Y

\draw[cara1] !{C[0]} -- !{C[1]} -- !{C[2]} -- !{C[3]} -- !{C[4]} -- !{C[5]} -- cycle;
\draw[cara2] !{gC[0]} -- !{gC[1]} -- !{gC[2]} -- !{gC[3]} -- !{gC[4]} -- !{gC[5]} -- cycle;
\draw[black] (2,-1) -- (4,4);
\draw[black] (2,-1) -- !{gCo};
\end{tikzpicture}
\end{center}
=>PYTHONTEX#sage#default#default#4#block#####169#
pr1 = vector(RR, [-1, 0])
pr2 = vector(RR, [2, 2])
vr = (pr2 - pr1)
u1 = vr.normalized()
u2 = vector(RR, [vr[1], -vr[0]]).normalized()

R = matrix(RR, [[1, 0, 0], [pr1[0], u1[0], u2[0]], [pr1[1], u1[1], u2[1]]])
MRRp = matrix(RR, [[1, 0, 0], [0, 1, 0], [0, 0, 0]])
MRRs = matrix(RR, [[1, 0, 0], [0, 1, 0], [0, 0, -1]])

Mp = R * MRRp * R^-1
Ms = R * MRRs * R^-1
=>PYTHONTEX#sage#default#default#5#i#####187#
R
=>PYTHONTEX#sage#default#default#6#i#####191#
Mp
=>PYTHONTEX#sage#default#default#7#i#####195#
Ms
=>PYTHONTEX#sage#default#default#8#block#####200#
R = matrix(RR, [[1, 0, 0], [3, 1, 0], [-3, 0, 1]])

a = pi/2
MRRg = matrix(RR, [[1, 0, 0], [0, cos(a), -sin(a)], [0, sin(a), cos(a)]])
Mg = R * MRRg * R^-1

cp0 = vector(RR, [1, 4, -2])

C = [Mg^i * cp0 for i in range(4)]
sC = [Ms * v for v in C]
pC = [Mp * v for v in C]

C = [v[1:] for v in C]
sC = [v[1:] for v in sC]
pC = [v[1:] for v in pC]
=>PYTHONTEX#sage#default#default#9#sub#####218#
\begin{center}
\begin{tikzpicture}[scale = 1,
cara1/.style={thick, color = blue, fill opacity = 0.3, fill = blue!20},
cara2/.style={thick, color = red, fill opacity = 0.3, fill = red!20},
]
\draw[->,thick,gray] (-1,0) -- (5.5,0); % Eje X
\draw[->,thick,gray] (0,-2.5) -- (0,5.5); % Eje Y

\draw[->,thick,red] !{pr1} -- !{pr2}; % recta

\draw[->,thick,yellow] !{pr1} -- !{pr1 + u1}; % recta
\draw[->,thick,yellow] !{pr1} -- !{pr1 + u2}; % recta

\draw[black] (3, -3) circle (2pt);
\draw[black] (4, -2) circle (2pt);

\draw[cara1] !{C[0]} -- !{C[1]} -- !{C[2]} -- !{C[3]} -- cycle;
\draw[cara1] !{sC[0]} -- !{sC[1]} -- !{sC[2]} -- !{sC[3]} -- cycle;
\draw[cara1] !{pC[0]} -- !{pC[1]} -- !{pC[2]} -- !{pC[3]} -- cycle;
%\draw[black] (2,-1) -- (4,4);
\end{tikzpicture}
\end{center}
=>PYTHONTEX#sage#default#default#10#block#####265#
R = matrix(RR, [[1, 0, 0], [1, 1, 0], [1, 0, 1]])
f = 3
MRRh = matrix(RR, [[1, 0, 0], [0, f, 0], [0, 0, f]])

Mf = R * MRRh * R^-1

tp0 = vector(RR, [-4, 2])
tp1 = vector(RR, [-3, 2])
tsv = tp1 - tp0
tsmp = tp0 + tsv/2
tp2 = tsmp + 5 * vector(RR, [-tsv[1], tsv[0]]).normalized()

C = vector(RR, [1, tp0[0], tp0[1]]), vector(RR, [1, tp1[0], tp1[1]]), vector(RR, [1, tp2[0], tp2[1]])
hC = [Mf * v for v in C]

C = [v[1:] for v in C]
hC = [v[1:] for v in hC]
=>PYTHONTEX#sage#default#default#11#sub#####285#
\begin{center}
\begin{tikzpicture}[scale = 1,
cara1/.style={thick, color = blue, fill opacity = 0.3, fill = blue!20},
cara2/.style={thick, color = red, fill opacity = 0.3, fill = red!20},
]
\draw[->,thick,gray] (-5,0) -- (0,0); % Eje X
\draw[->,thick,gray] (0,0) -- (0,8); % Eje Y

\draw[cara1] !{C[0]} -- !{C[1]} -- !{C[2]} -- cycle;
\draw[cara1] !{hC[0]} -- !{hC[1]} -- !{hC[2]} -- cycle;


\draw[black] (1, 1) circle (2pt);
\end{tikzpicture}
\end{center}
=>PYTHONTEX#sage#default#default#12#block#####320#
R = matrix(RR, [[1, 0, 0], [1, 1, 0], [3, 0, 1]])

a = pi/4
MRRg = matrix(RR, [[1, 0, 0], [0, cos(a), -sin(a)], [0, sin(a), cos(a)]])
Mg = R * MRRg * R^-1

op0 = vector(RR, [1, 2, 5])

C = [Mg^i * op0 for i in range(8)]
C = [v[1:] for v in C]
=>PYTHONTEX#sage#default#default#13#sub#####333#
\begin{center}
\begin{tikzpicture}[scale = 1,
cara1/.style={thick, color = yellow, fill opacity = 0.3, fill = yellow!20},
]
\draw[->,thick,gray] (-3,0) -- (5,0); % Eje X
\draw[->,thick,gray] (0,-1) -- (0,7); % Eje Y

\draw[cara1] !{C[0]} -- !{C[1]} -- !{C[2]} -- !{C[3]} -- !{C[4]} -- !{C[5]} -- !{C[6]} -- !{C[7]} -- cycle;

\filldraw[blue] !{C[0]} circle (2pt);
\filldraw[blue] !{C[1]} circle (2pt);
\filldraw[blue] !{C[2]} circle (2pt);
\filldraw[blue] !{C[3]} circle (2pt);
\filldraw[blue] !{C[4]} circle (2pt);
\filldraw[blue] !{C[5]} circle (2pt);
\filldraw[blue] !{C[6]} circle (2pt);
\filldraw[blue] !{C[7]} circle (2pt);

\draw[black] (1, 3) circle (2pt);
\end{tikzpicture}
\end{center}
=>PYTHONTEX#sage#default#default#14#block#####376#
R = matrix(RR, [[1, 0, 0], [-4, 1, 0], [-1, 0, 1]])

a = 2*pi/5
MRRg = matrix(RR, [[1, 0, 0], [0, cos(a), -sin(a)], [0, sin(a), cos(a)]])
Mg = R * MRRg * R^-1

sp0 = vector(RR, [1, -2, 0])

C = [Mg^i * sp0 for i in range(5)]

R = matrix(RR, [[1, 0, 0], [-8, 1, 0], [4, 0, 1]])

a = pi/180 * 48
MRRg = matrix(RR, [[1, 0, 0], [0, cos(a), -sin(a)], [0, sin(a), cos(a)]])
Mg = R * MRRg * R^-1

Cp = [Mg * v for v in C]

C = [v[1:] for v in C]
Cp = [v[1:] for v in Cp]


=>PYTHONTEX#sage#default#default#15#sub#####401#
\begin{center}
\begin{tikzpicture}[scale = 1,
cara1/.style={thick, color = blue, fill opacity = 0.3, fill = blue!20},
]
\draw[->,thick,gray] (-7,0) -- (1,0); % Eje X
\draw[->,thick,gray] (0,-5) -- (0,7); % Eje Y

\draw[cara1] !{C[0]} -- !{C[2]} -- !{C[4]} -- !{C[1]} -- !{C[3]} -- !{C[0]} -- cycle;
\draw[cara1] !{Cp[0]} -- !{Cp[2]} -- !{Cp[4]} -- !{Cp[1]} -- !{Cp[3]} -- !{Cp[0]} -- cycle;

\draw[black] (-2, 0) circle (2pt) node[anchor=west]{O};
\draw[black] (-4, -1) circle (2pt);

\end{tikzpicture}
\end{center}
=>PYTHONTEX#sage#default#default#16#block#####460#
R = matrix(RR,[[1,0,0],
            [5,1,0],
            [0,0,1]])
R.subdivide(1,1)
=>PYTHONTEX#sage#default#default#17#i#####466#
R
=>PYTHONTEX#sage#default#default#18#block#####468#
beta = 2*pi/5
G = matrix(RR,[[1, 0     ,  0      ],
            [0, cos(beta), -sin(beta)],
            [0, sin(beta),  cos(beta)]])
g=R*G*R^-1
g.subdivide(1,1)
=>PYTHONTEX#sage#default#default#19#i#####477#
g
=>PYTHONTEX#sage#default#default#20#block#####480#
V = [g^i*vector(RR,[1,6,0]) for i in range(5)]
=>PYTHONTEX#sage#default#default#21#i#####484#
V[0]
=>PYTHONTEX#sage#default#default#22#i#####485#
V[1]
=>PYTHONTEX#sage#default#default#23#i#####486#
V[2]
=>PYTHONTEX#sage#default#default#24#i#####487#
V[3]
=>PYTHONTEX#sage#default#default#25#i#####488#
V[4]
=>PYTHONTEX#sage#default#default#26#block#####491#
R1 = matrix(RR,[[1,0,0],
             [1,1,0],
             [2,0,1]])
R1.subdivide(1,1)
=>PYTHONTEX#sage#default#default#27#i#####498#
R1
=>PYTHONTEX#sage#default#default#28#block#####499#
alpha = 39*pi/180
G1 = matrix(RR,[[1, 0        ,  0        ],
            [0, cos(alpha), -sin(alpha)],
            [0, sin(alpha),  cos(alpha)]])
g1=R1*G1*R1^-1
g1.subdivide(1,1)
=>PYTHONTEX#sage#default#default#29#i#####508#
g1
=>PYTHONTEX#sage#default#default#30#block#####511#
V1 = [g1*v for v in V]
=>PYTHONTEX#sage#default#default#31#i#####514#
V1[0]
=>PYTHONTEX#sage#default#default#32#i#####515#
V1[1]
=>PYTHONTEX#sage#default#default#33#i#####516#
V1[2]
=>PYTHONTEX#sage#default#default#34#i#####517#
V1[3]
=>PYTHONTEX#sage#default#default#35#i#####518#
V1[4]
=>PYTHONTEX#sage#default#default#36#block#####521#
V = [v[1:] for v in V]
V1 = [v[1:] for v in V1]
=>PYTHONTEX#sage#default#default#37#i#####527#
V[0]
=>PYTHONTEX#sage#default#default#38#i#####527#
V1[0]
=>PYTHONTEX#sage#default#default#39#i#####528#
V[1]
=>PYTHONTEX#sage#default#default#40#i#####528#
V1[1]
=>PYTHONTEX#sage#default#default#41#i#####529#
V[2]
=>PYTHONTEX#sage#default#default#42#i#####529#
V1[2]
=>PYTHONTEX#sage#default#default#43#i#####530#
V[3]
=>PYTHONTEX#sage#default#default#44#i#####530#
V1[3]
=>PYTHONTEX#sage#default#default#45#i#####531#
V[4]
=>PYTHONTEX#sage#default#default#46#i#####531#
V1[4]
=>PYTHONTEX#sage#default#default#47#block#####534#
P=vector(RR,[1,2])
O1=vector(RR,[5,0])
g1O1=g1*vector(RR,[1,5,0])
g1O1=g1O1[1:]
=>PYTHONTEX#sage#default#default#48#i#####540#
P
=>PYTHONTEX#sage#default#default#49#i#####541#
O1
=>PYTHONTEX#sage#default#default#50#i#####542#
g1O1
=>PYTHONTEX#sage#default#default#51#sub#####570#
\begin{center}
\begin{tikzpicture}[scale = 1.3,
cara1/.style={thick, color = blue, fill opacity = 0.3, fill = blue!20},
cara2/.style={thick, color = red, fill opacity = 0.3, fill = red!20}]
\draw[->,thick,gray] (-1,0) -- (7,0); % Eje X
\draw[->,thick,gray] (0,-1) -- (0,5); % Eje Y
\draw[cara1] !{V[0]} -- !{V[2]} -- !{V[4]} -- !{V[1]} -- !{V[3]} -- cycle;
\draw[cara2] !{V1[0]} -- !{V1[2]} -- !{V1[4]} -- !{V1[1]} -- !{V1[3]} -- cycle;
\draw[dashed] !{P} -- !{O1};
\draw[dashed] !{P} -- !{g1O1};
\draw[fill = white] !{P} circle (0.5mm);
\draw[fill = white] !{P} circle (0.5mm) node[above left] {$P$};
\draw[fill = white] !{O1} circle (0.5mm);
\draw[fill = white] !{g1O1} circle (0.5mm);
\end{tikzpicture}
\end{center}
=>PYTHONTEX#sage#default#default#52#block#####596#
Pol.<x,y> = PolynomialRing(RR)
A=matrix(Pol,[[1,1,1],
            [x,1,5],
            [y,2,0]])
=>PYTHONTEX#sage#default#default#53#i#####608#
det(A)
=>PYTHONTEX#sage#default#default#54#block#####619#
B=g*vector(RR,[1,6,0])
B=B[1:]
=>PYTHONTEX#sage#default#default#55#i#####623#
n(B)
=>PYTHONTEX#sage#default#default#56#block#####627#
g1O1=g1*vector(RR,[1,5,0])
g1O1=g1O1[1:]
=>PYTHONTEX#sage#default#default#57#i#####632#
n(g1O1)
=>PYTHONTEX#sage#default#default#58#block#####636#
Bp=g1*g*vector(RR,[1,6,0])
Bp=Bp[1:]
=>PYTHONTEX#sage#default#default#59#i#####642#
n(Bp)
=>PYTHONTEX#sage#default#default#60#block#####672#
R = matrix(RR,[[ 1,0,0],
            [ 2,1,0],
            [-3,0,1]])
R.subdivide(1,1)
=>PYTHONTEX#sage#default#default#61#i#####679#
R
=>PYTHONTEX#sage#default#default#62#block#####682#
beta = 2*pi/5
G = matrix(RR,[[1, 0        ,  0        ],
            [0, cos(beta), -sin(beta)],
            [0, sin(beta),  cos(beta)]])
g=R*G*R^-1
g.subdivide(1,1)
=>PYTHONTEX#sage#default#default#63#i#####691#
g
=>PYTHONTEX#sage#default#default#64#block#####695#
V = [g^i*vector(RR,[1,3,-2]) for i in range(5)]
=>PYTHONTEX#sage#default#default#65#i#####698#
V[0]
=>PYTHONTEX#sage#default#default#66#i#####699#
V[1]
=>PYTHONTEX#sage#default#default#67#i#####700#
V[2]
=>PYTHONTEX#sage#default#default#68#i#####701#
V[3]
=>PYTHONTEX#sage#default#default#69#i#####702#
V[4]
=>PYTHONTEX#sage#default#default#70#block#####707#
P=vector(RR,[-2,7])
Q=vector(RR,[0,9])
v1 = Q-P
v2=vector(RR,[-v1[1],v1[0]])
R=block_matrix(RR,[[       matrix([1,0,0])],
                [column_matrix([P,v1,v2])]])
R.subdivide(1,1)
=>PYTHONTEX#sage#default#default#71#i#####717#
R
=>PYTHONTEX#sage#default#default#72#block#####719#
sRR = matrix(RR,[[1,0, 0],
              [0,1, 0],
              [0,0,-1]])
sRR.subdivide(1,1)
s=R*sRR*R^-1
s.subdivide(1,1)
=>PYTHONTEX#sage#default#default#73#i#####728#
sRR
=>PYTHONTEX#sage#default#default#74#i#####728#
s
=>PYTHONTEX#sage#default#default#75#block#####732#
V1 = [s*v for v in V]
=>PYTHONTEX#sage#default#default#76#i#####735#
V1[0]
=>PYTHONTEX#sage#default#default#77#i#####736#
V1[1]
=>PYTHONTEX#sage#default#default#78#i#####737#
V1[2]
=>PYTHONTEX#sage#default#default#79#i#####738#
V1[3]
=>PYTHONTEX#sage#default#default#80#i#####739#
V1[4]
=>PYTHONTEX#sage#default#default#81#block#####742#
V = [vector(v[1:]) for v in V]
V1 = [vector(v[1:]) for v in V1]
=>PYTHONTEX#sage#default#default#82#i#####746#
V[0]
=>PYTHONTEX#sage#default#default#83#i#####746#
V1[0]
=>PYTHONTEX#sage#default#default#84#i#####747#
V[1]
=>PYTHONTEX#sage#default#default#85#i#####747#
V1[1]
=>PYTHONTEX#sage#default#default#86#i#####748#
V[2]
=>PYTHONTEX#sage#default#default#87#i#####748#
V1[2]
=>PYTHONTEX#sage#default#default#88#i#####749#
V[3]
=>PYTHONTEX#sage#default#default#89#i#####749#
V1[3]
=>PYTHONTEX#sage#default#default#90#i#####750#
V[4]
=>PYTHONTEX#sage#default#default#91#i#####750#
V1[4]
=>PYTHONTEX#sage#default#default#92#block#####753#
O1=vector(RR,[2,-3])
sO1=s*vector(RR,[1,2,-3])
sO1=sO1[1:]
=>PYTHONTEX#sage#default#default#93#i#####759#
O1
=>PYTHONTEX#sage#default#default#94#i#####760#
sO1
=>PYTHONTEX#sage#default#default#95#sub#####763#
\begin{center}
\begin{tikzpicture}[scale = 0.5,
cara1/.style={thick, color = blue, fill opacity = 0.3, fill = blue!20},
cara2/.style={thick, color = red, fill opacity = 0.3, fill = red!20}]
\draw[->,thick,gray] (4.5,0) -- (-14,0); % Eje X
\draw[->,thick,gray] (0,-5) -- (0,14); % Eje Y
\draw[cara1] !{V[0]} -- !{V[2]} -- !{V[4]} -- !{V[1]} -- !{V[3]} -- cycle;
\draw[cara2] !{V1[0]} -- !{V1[2]} -- !{V1[4]} -- !{V1[1]} -- !{V1[3]} -- cycle;
\draw[dashed] (-9,0) -- (2,11);
\draw[dashed] !{O1} -- !{sO1};
\draw[fill = white] !{P} circle (0.5mm);
\draw[fill = white] !{Q} circle (0.5mm);
\draw[fill = white] !{P} circle (0.5mm) node[above left] {$P$};
\draw[fill = white] !{Q} circle (0.5mm) node[above left] {$Q$};
\draw[fill = white] !{O1} circle (0.5mm);
\draw[fill = white] !{sO1} circle (0.5mm);
\end{tikzpicture}
\end{center}
=>PYTHONTEX#sage#default#default#96#block#####815#
Pol.<x,y>=PolynomialRing(RR)
A=matrix(Pol,[[1,1,1],
            [x,-2,0],
            [y,7,9]])
=>PYTHONTEX#sage#default#default#97#i#####827#
det(A)
=>PYTHONTEX#sage#default#default#98#block#####837#
B=g*vector(RR,[1,3,-2])
B=B[1:]
=>PYTHONTEX#sage#default#default#99#i#####841#
n(B)
=>PYTHONTEX#sage#default#default#100#block#####845#
sO1=s*vector(RR,[1,2,-3])
sO1=sO1[1:]
=>PYTHONTEX#sage#default#default#101#i#####850#
n(sO1)
=>PYTHONTEX#sage#default#default#102#block#####854#
Bp=s*g*vector(RR,[1,3,-2])
Bp=Bp[1:]
=>PYTHONTEX#sage#default#default#103#i#####860#
n(Bp)
=>PYTHONTEX#sage#default#default#104#block#####875#
A = vector(RR, [1, 2, -1])
B = vector(RR, [2, 1, 1])
C = vector(RR, [-1, 3, 1])

AB = B - A
AC = C - A
n = AB.cross_product(AC)

u1 = AB.normalized()
u2 = n.cross_product(AB)
u3 = n.normalized()

R = block_matrix(2, 1, [matrix(RR, [1, 0, 0, 0]), column_matrix([A, u1, u2, u3])])
R.subdivide(1, 1)

MRRs = matrix(RR, [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, -1]])

Ms = R * MRRs * R^-1
Ms.subdivide(1, 1)
=>PYTHONTEX#sage#default#default#105#i#####898#
Ms
=>PYTHONTEX#sage#default#default#106#block#####913#
R = matrix(RR, [[1, 0, 0, 0], [-2, 1, 0, 0], [2, 0, 1, 0], [1, 0, 0, 1]])
f = 1/2
MRRh = matrix(RR, [[1, 0, 0, 0], [0, f, 0, 0], [0, 0, f, 0], [0, 0, 0, f]])
Mh = R * MRRh * R^-1
Mh.subdivide(1, 1)
=>PYTHONTEX#sage#default#default#107#i#####922#
Mh
=>PYTHONTEX#sage#default#default#108#block#####939#
n = vector(RR, [3, 1, -1])
P = vector(RR, [1, 0, 2])
Q = vector(RR, [1, 1, 3])

PQ = Q - P

u1 = PQ.normalized()
u2 = PQ.cross_product(n).normalized()
u3 = n.normalized()

R = block_matrix(2, 1, [matrix(RR, [1, 0, 0, 0]), column_matrix([P, u1, u2, u3])])
R.subdivide(1, 1)

a = 2*pi/7
MRRg = matrix(RR, [[1, 0, 0, 0], [0, cos(a), -sin(a), 0], [0, sin(a), cos(a), 0], [0, 0, 0, 1]])

Mg = R * MRRg * R^-1

C = [Mg^i * vector(RR, [1, 1, 1, 3]) for i in range(7)]
W = [v[1:] for v in C]
=>PYTHONTEX#sage#default#default#109#sub#####962#
\begin{center}
\tdplotsetmaincoords{70}{110}
\begin{tikzpicture}[scale = 1, tdplot_main_coords,
cara/.style={thick, color = blue, fill opacity = 0.3, fill = blue!20}]
\draw[->,thick,gray] (-5,0,0) -- (5,0,0); % Eje X
\draw[->,thick,gray] (0,-5,0) -- (0,5,0); % Eje Y
\draw[->,thick,gray] (0,0,-1) -- (0,0,5); % Eje Z
\draw[cara] !{W[0]} -- !{W[1]} -- !{W[2]} -- !{W[3]} -- !{W[4]} -- !{W[5]}
-- !{W[6]} -- cycle;
\draw[cara] !{P+3*u1+3*u2} -- !{P+3*u1-3*u2} -- !{P-3*u1-3*u2} -- !{P-3*u1+3*u2} -- cycle;
\draw[black] (1, 1, 3) circle (2pt);
\draw[black] (1, 0, 2) circle (2pt);
\end{tikzpicture}
\end{center}
=>PYTHONTEX#sage#default#default#110#block#####999#
D = vector(RR, [1, 1, 1, 0]), vector(RR, [1, 2, -1, -3]), vector(RR, [1, 3, -3, -1]), vector(RR, [1, 2, 3, 1]), vector(RR, [1, 4, -6, 10]), vector(RR, [1, 5, 10, -15])

n = vector(RR, [1, 1, 0])
v1 = vector(RR, [-n[1], n[0], 0])
v2 = n.cross_product(v1)

u1, u2, u3 = v1.normalized(), v2.normalized(), n.normalized()

# x = 0, y = 1
R = block_matrix(2, 1, [matrix(RR, [1, 0, 0, 0]), column_matrix(RR, [vector(RR, [0, 1, 0]), u1, u2, u3])])

MRRs = matrix(RR, [[1, 0, 0, 0], [0, 1, 0, 0],  [0, 0, 1, 0], [0, 0, 0, -1]])

Ms = R * MRRs * R^-1

sime = [Ms * v for v in D]
=>PYTHONTEX#sage#default#default#111#i#####1021#
Ms
=>PYTHONTEX#sage#default#default#112#sub#####1024#
\begin{center}
\tdplotsetmaincoords{70}{110}
\begin{tikzpicture}[scale = 0.3, tdplot_main_coords,
  cara/.style={thick, color = blue, fill opacity = 0.3, fill = blue!20}]
\draw[->,thick,gray] (-15,0,0) -- (15,0,0); % Eje X
\draw[->,thick,gray] (0,-15,0) -- (0,15,0); % Eje Y
\draw[->,thick,gray] (0,0,-15) -- (0,0,15); % Eje Z
\draw[->,thick,gray] (0,0,0) -- !{5*u1} node[below right] {$u_1$};
\draw[->,thick,gray] (0,0,0) -- !{5*u2} node[below right] {$u_2$};
\draw[->,thick,gray] (0,0,0) -- !{5*u3} node[below right] {$u_3$};
\draw[fill = blue] !{D[0]} circle (2mm) node[above left] {$P_1$};
\draw[fill = blue] !{D[1]} circle (2mm) node[below right] {$P_2$};
\draw[fill = blue] !{D[2]} circle (2mm) node[below right] {$P_3$};
\draw[fill = blue] !{D[3]} circle (2mm) node[above right] {$P_4$};
\draw[fill = blue] !{D[4]} circle (2mm) node[above right] {$P_5$};
\draw[fill = blue] !{D[5]} circle (2mm) node[above right] {$P_6$};
\draw[fill = red] !{sime[0]} circle (2mm) node[above left] {$P'_1$};
\draw[fill = red] !{sime[1]} circle (2mm) node[below right] {$P'_2$};
\draw[fill = red] !{sime[2]} circle (2mm) node[below right] {$P'_3$};
\draw[fill = red] !{sime[3]} circle (2mm) node[above right] {$P'_4$};
\draw[fill = red] !{sime[4]} circle (2mm) node[above right] {$P'_5$};
\draw[fill = red] !{sime[5]} circle (2mm) node[above right] {$P'_6$};
\draw[cara] !{16*u1+16*u2} -- !{16*u1-16*u2} -- !{-16*u1-16*u2} -- !{-16*u1+16*u2} -- cycle;
\end{tikzpicture}
\end{center}
=>PYTHONTEX#sage#default#default#113#block#####1072#
A = vector(RR, [1, 3, -1])
B = vector(RR, [3, 2, 1])
AB = B - A
PM = A + (AB / 2)

n = AB
v1 = vector(RR, [-n[1], n[0], 0])
v2 = n.cross_product(v1)


u1 = v1.normalized()
u2 = v2.normalized()
u3 = n.normalized()

R = block_matrix(2, 1, [matrix(RR, [1, 0, 0, 0]), column_matrix([PM, u1, u2, u3])])

MRRs = matrix(RR, [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, -1]])

Ms = R * MRRs * R^-1
=>PYTHONTEX#sage#default#default#114#i#####1095#
Ms
=>PYTHONTEX#sage#default#default#115#sub#####1098#
\begin{center}
\tdplotsetmaincoords{70}{110}
\begin{tikzpicture}[scale = 1, tdplot_main_coords,
cara/.style={thick, color = blue, fill opacity = 0.3, fill = blue!20}]
\draw[->,thick,gray] (-5,0,0) -- (5,0,0); % Eje X
\draw[->,thick,gray] (0,-5,0) -- (0,5,0); % Eje Y
\draw[->,thick,gray] (0,0,-5) -- (0,0,5); % Eje Z
\draw[->,thick,red] !{PM} -- !{PM+2*u1} node[below right] {$u_1$};
\draw[->,thick,red] !{PM} -- !{PM+2*u2} node[below right] {$u_2$};
\draw[->,thick,red] !{PM} -- !{PM+2*u3} node[below right] {$u_3$};
\draw[fill = blue] !{A} circle (1mm) node[above left] {$A$};
\draw[fill = blue] !{B} circle (1mm) node[below right] {$B$};
\draw[fill = blue] !{PM} circle (1mm) node[below right] {$PM$};
\end{tikzpicture}
\end{center}
=>PYTHONTEX#sage#default#default#116#block#####1129#
# plano
pn = vector(RR, [1, 1, 2])
v1 = vector(RR, [-pn[1], pn[0], 0])
v2 = pn.cross_product(v1)

A = vector(RR, [0.5, 0.1, 0.4])
Ah = vector(RR, [1, 00.5, 0.1, 0.4])

# proyectar A en la normal del plano obteniendo centro de cara
u1, u2, u3 = pn.normalized(), v1.normalized(), v2.normalized()
pB = column_matrix([u1, u2, u3])
MBBpv = matrix(RR, [[1, 0, 0], [0, 0, 0], [0, 0, 0]])
Mpn = pB * MBBpv * pB^-1
cO = Mpn * A

# rotar A en el centro de la cara obteniendo puntos de cara
cR = block_matrix(2, 1, [matrix(RR, [1, 0, 0, 0]), column_matrix([cO, u2, u3, u1])])
a = 2*pi/5
McRcRr = matrix(RR, [[1, 0, 0, 0], [0, cos(a), -sin(a), 0], [0, sin(a), cos(a), 0], [0, 0, 0, 1]])
Mcr = cR * McRcRr * cR^-1
cAP = [Mcr^i * Ah for i in range(5)]
cAP = [v[1:] for v in cAP]

# simetria de cara por el plano obteniendo la otra cara
MBBsp = matrix(RR, [[-1, 0, 0], [0, 1, 0], [0, 0, 1]])
Msp = pB * MBBsp * pB^-1
cBP = [Msp * v for v in cAP]
=>PYTHONTEX#sage#default#default#117#sub#####1160#
\begin{center}
\tdplotsetmaincoords{70}{110}
\begin{tikzpicture}[scale = 5, tdplot_main_coords,
  cara/.style={thick, color = blue, fill opacity = 0.3, fill = blue!20},
  cara2/.style={thick, color = purple, fill opacity = 0.2, fill = purple!20},
  ]
\draw[->,thick,gray] (-1.5,0,0) -- (2.5,0,0); % Eje X
\draw[->,thick,gray] (0,-1.5,0) -- (0,1.5,0); % Eje Y
\draw[->,thick,gray] (0,0,-1.5) -- (0,0,1.5); % Eje Z
\draw[->,thick,red] (0, 0, 0) -- !{0.5*u1} node[below right] {$u_1$};
\draw[->,thick,red] (0, 0, 0) -- !{0.5*u2} node[below right] {$u_2$};
\draw[->,thick,red] (0, 0, 0) -- !{0.5*u3} node[below right] {$u_3$};
\draw[->,thick,green] !{cO} -- !{cO + 0.5*u2} node[below right] {$r_1$};
\draw[->,thick,green] !{cO} -- !{cO + 0.5*u3} node[below right] {$r_2$};
\draw[->,thick,green] !{cO} -- !{cO + 0.5*u1} node[below right] {$r_3$};
\draw[cara2] !{-0.5*u2 -0.5*u3} -- !{0.5*u2 -0.5*u3} -- !{0.5*u2 +0.5*u3} -- !{-0.5*u2 +0.5*u3} -- cycle;

\draw[cara] !{cAP[0]} -- !{cAP[1]} -- !{cAP[2]} -- !{cAP[3]} -- !{cAP[4]} -- cycle;
\draw[cara] !{cBP[0]} -- !{cBP[1]} -- !{cBP[2]} -- !{cBP[3]} -- !{cBP[4]} -- cycle;
\draw[cara] !{cAP[0]} -- !{cBP[0]} -- !{cBP[1]} -- !{cAP[1]} -- cycle;
\draw[cara] !{cAP[1]} -- !{cBP[1]} -- !{cBP[2]} -- !{cAP[2]} -- cycle;
\draw[cara] !{cAP[2]} -- !{cBP[2]} -- !{cBP[3]} -- !{cAP[3]} -- cycle;
\draw[cara] !{cAP[3]} -- !{cBP[3]} -- !{cBP[4]} -- !{cAP[4]} -- cycle;
\draw[cara] !{cAP[4]} -- !{cBP[4]} -- !{cBP[0]} -- !{cAP[0]} -- cycle;
\draw[fill = blue] !{A} circle (0.1mm) node[above left] {$A$};
\draw[fill = blue] !{cO} circle (0.1mm) node[above left] {$O_c$};
\end{tikzpicture}
\end{center}
=>PYTHONTEX#sage#default#default#118#block#####1208#
P=vector(RR,[1,0,1])
v3 = vector(RR,[1,-1,1])
v1 = vector(RR,[1,1,0])
v2 = v1.cross_product(v3)
v1=v1/norm(v1)
v2=v2/norm(v2)
v3=v3/norm(v3)
=>PYTHONTEX#sage#default#default#119#block#####1220#
R = block_matrix(RR,[[       matrix([1, 0, 0, 0])],
                     [column_matrix([P,v1,v2,v3])]])
R.subdivide(1,1)
=>PYTHONTEX#sage#default#default#120#i#####1226#
R
=>PYTHONTEX#sage#default#default#121#block#####1230#
a = 2*pi/5
G = column_matrix(RR,[[1,    0,     0,  0],
                     [0,cos(a),sin(a), 0],
                     [0,-sin(a),cos(a),0],
                     [0,    0,     0,  1]])
g = R*G*R^-1
g.subdivide(1,1)
=>PYTHONTEX#sage#default#default#122#i#####1239#
g
=>PYTHONTEX#sage#default#default#123#block#####1244#
puntogiro=R*vector(RR,[1,1,0,0])
BasePiramideh = [g^i*puntogiro for i in range(5)]
=>PYTHONTEX#sage#default#default#124#block#####1251#
Verticeh = R*vector(RR,[1,0,0,5])
=>PYTHONTEX#sage#default#default#125#block#####1257#
BP = [v[1:] for v in BasePiramideh]
Vertice = Verticeh[1:]
=>PYTHONTEX#sage#default#default#126#i#####1262#
BP[0]
=>PYTHONTEX#sage#default#default#127#i#####1263#
BP[1]
=>PYTHONTEX#sage#default#default#128#i#####1264#
BP[2]
=>PYTHONTEX#sage#default#default#129#i#####1265#
BP[3]
=>PYTHONTEX#sage#default#default#130#i#####1266#
BP[4]
=>PYTHONTEX#sage#default#default#131#i#####1268#
Vertice
=>PYTHONTEX#sage#default#default#132#sub#####1295#
\begin{center}
\tdplotsetmaincoords{70}{110}
\begin{tikzpicture}[scale = 1.6, tdplot_main_coords,
  cara/.style={thick, color = blue, fill opacity = 0.3, fill = blue!20},
  ]
\draw[->,thick,gray] (-2.5,0,0) -- (3.5,0,0); % Eje X
\draw[->,thick,gray] (0,-2.5,0) -- (0,2.5,0); % Eje Y
\draw[->,thick,gray] (0,0,-2.5) -- (0,0,2.5); % Eje Z
\draw[cara] !{BP[0]} -- !{BP[1]} -- !{BP[2]} -- !{BP[3]} -- !{BP[4]} --cycle;
\draw[cara] !{BP[0]} -- !{Vertice} -- !{BP[1]} -- cycle;
\draw[cara] !{BP[1]} -- !{Vertice} -- !{BP[2]} -- cycle;
\draw[cara] !{BP[2]} -- !{Vertice} -- !{BP[3]} -- cycle;
\draw[cara] !{BP[3]} -- !{Vertice} -- !{BP[4]} -- cycle;
\draw[cara] !{BP[4]} -- !{Vertice} -- !{BP[0]} -- cycle;
\end{tikzpicture}
\end{center}
=>PYTHONTEX#sage#default#default#133#block#####1333#
v3 = vector(RR,[2,-1,1])
v1 = vector(RR,[1,2,0])
v2 = v1.cross_product(v3)
v1=v1/norm(v1)
v2=v2/norm(v2)
v3=v3/norm(v3)
=>PYTHONTEX#sage#default#default#134#block#####1344#
P = vector(RR,[1,1,0])
R = block_matrix(RR,[[       matrix([1, 0, 0, 0])],
                     [column_matrix([P,v1,v2,v3])]])
R.subdivide(1,1)
=>PYTHONTEX#sage#default#default#135#i#####1350#
R
=>PYTHONTEX#sage#default#default#136#block#####1353#
a = 2*pi/6
G = column_matrix(RR,[[1,    0,     0,  0],
                     [0,cos(a),sin(a), 0],
                     [0,-sin(a),cos(a),0],
                     [0,    0,     0,  1]])
g = R*G*R^-1
g.subdivide(1,1)
=>PYTHONTEX#sage#default#default#137#i#####1362#
g
=>PYTHONTEX#sage#default#default#138#block#####1364#
BaseTorreh = [g^i*R*vector(RR,[1,1,0,0]) for i in range(6)]
=>PYTHONTEX#sage#default#default#139#block#####1373#
TapaTorreh = [v+R*vector(RR,[1,0,0,3]) for v in BaseTorreh]
=>PYTHONTEX#sage#default#default#140#block#####1379#
BT = [v[1:] for v in BaseTorreh]
TT = [w[1:] for w in TapaTorreh]
=>PYTHONTEX#sage#default#default#141#sub#####1411#
\begin{center}
\tdplotsetmaincoords{70}{110}
\begin{tikzpicture}[scale = 2.4, tdplot_main_coords,
  cara/.style={thick, color = blue, fill opacity = 0.3, fill = blue!20},
  ]
\draw[->,thick,gray] (-2.5,0,0) -- (3.5,0,0); % Eje X
\draw[->,thick,gray] (0,-2.5,0) -- (0,2.5,0); % Eje Y
\draw[->,thick,gray] (0,0,-2.5) -- (0,0,2.5); % Eje Z
\draw[cara] !{BT[0]} -- !{BT[1]} -- !{BT[2]} -- !{BT[3]} -- !{BT[4]} -- !{BT[5]} --cycle;
\draw[cara] !{TT[0]} -- !{TT[1]} -- !{TT[2]} -- !{TT[3]} -- !{TT[4]} -- !{TT[5]} --cycle;
\draw[cara] !{BT[0]} -- !{TT[0]} -- !{TT[1]} -- !{BT[1]} -- cycle;
\draw[cara] !{BT[1]} -- !{TT[1]} -- !{TT[2]} -- !{BT[2]} -- cycle;
\draw[cara] !{BT[2]} -- !{TT[2]} -- !{TT[3]} -- !{BT[3]} -- cycle;
\draw[cara] !{BT[3]} -- !{TT[3]} -- !{TT[4]} -- !{BT[4]} -- cycle;
\draw[cara] !{BT[4]} -- !{TT[4]} -- !{TT[5]} -- !{BT[5]} -- cycle;
\draw[cara] !{BT[5]} -- !{TT[5]} -- !{TT[0]} -- !{BT[0]} -- cycle;
\end{tikzpicture}
\end{center}
=>PYTHONTEX:SETTINGS#
version=0.18
outputdir=pythontex-files-Ejercicios-Transformaciones-Afines-Resuelta
workingdir=.
workingdirset=false
gobble=none
rerun=default
hashdependencies=default
makestderr=false
stderrfilename=full
keeptemps=none
pyfuture=default
pyconfuture=none
pygments=true
pygglobal=:GLOBAL||
fvextfile=-1
pyconbanner=none
pyconfilename=stdin
depythontex=false
pygfamily=py|python3|
pygfamily=pycon|pycon|
pygfamily=sympy|python3|
pygfamily=sympycon|pycon|
pygfamily=pylab|python3|
pygfamily=pylabcon|pycon|
pygfamily=sage|sage|
