PASO 1

N bares
E euros a gastar

bar it i
    precio tapa p_i
    tenedores t_i

platos tapum(k, b) = 
    // casos base
    if k o b == 0: 0
    if k o b < 0: -inf
    else:
        max(
                    tapum(k - 1, b        ) // no comemos en bar k
              t_k + tapum(k - 1, b -   p_k) // comemos 1 plato por tenedor
            2*t_k + tapum(k - 1, b - 2*p_k) // comemos 2 plato por tenedor
            3*t_k + tapum(k - 1, b - 3*p_k) // comemos 3 plato por tenedor
        )

PASO 2

int V[N,E] = { 0 } // casos base
for k in 1..N
    for b in 1..E
        cero =                       V[k - 1, b             ]
        un   =            t[k - 1] + V[k - 1, b -   p[k - 1]]
        dos  =          2*t[k - 1] + V[k - 1, b - 2*p[k - 1]]
        tres =          3*t[k - 1] + V[k - 1, b - 3*p[k - 1]]

        V[k, b] = max(cero, un, dos, tres)

PASO 3

S[N] = { 0 }
b = E
for k in N..1
    if (V[k, b] == V[k - 1, b])
        // no comemos
    if (V[k, b] == (t[k - 1] + V[k - 1, b - p[k - 1]]))
        // com 1 plato
        S[k - 1] = 1
        b -= p[k - 1]
    if (V[k, b] == (2*t[k - 1] + V[k - 1, b - 2*p[k - 1]]))
        // com 2 plato
        S[k - 1] = 2
        b -= 2*p[k - 1]
    if (V[k, b] == (3*t[k - 1] + V[k - 1, b - 3*p[k - 1]]))
        // com 3 plato
        S[k - 1] = 3
        b -= 3*p[k - 1]

solucion: S platos por bar, V[N, E] platos totales
    
